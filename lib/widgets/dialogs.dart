import 'dart:convert';

import 'package:firebase_exploiter/database/my_firebase.dart';
import 'package:firebase_exploiter/screens/main_screen/MainScreen.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:firebase_exploiter/utils/extensions.dart';

showAddDialog(BuildContext context, {required String path}) {
  showDialog(
    context: context,
    barrierDismissible: true,
    builder: (context) {
      TextEditingController textFieldData = TextEditingController();
      return Material(
        color: Colors.transparent,
        child: Center(
          child: Container(
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(20),
              color: Colors.white,
            ),
            // Dialog background
            width: MediaQuery.of(context).size.width * 0.90,
            // Dialog width
            // Dialog height
            child: SingleChildScrollView(
              child: Column(
                children: [
                  Container(
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.only(
                        topLeft: Radius.circular(10),
                        topRight: Radius.circular(10),
                      ),
                      color: Colors.blue,
                    ),
                    child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Row(
                        children: [
                          Text(
                            'Add document',
                            style: TextStyle(
                              color: Colors.white,
                            ),
                          ),
                          Spacer(),
                          IconButton(
                            icon: Icon(
                              Icons.close,
                              color: Colors.white,
                            ),
                            onPressed: () {
                              Get.back();
                            },
                          ),
                        ],
                      ),
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Column(children: [
                      Text('Make sure you init data as Map/Json'),
                      SizedBox(
                        height: 5,
                      ),
                      TextFormField(
                        controller: textFieldData,
                        decoration: InputDecoration(
                          border: OutlineInputBorder(),
                        ),
                        keyboardType: TextInputType.multiline,
                        minLines: 8,
                        maxLines: 8,
                      ),
                      SizedBox(
                        height: 10,
                      ),
                      Row(
                        children: [
                          ElevatedButton.icon(
                            onPressed: () async {
                              if (!textFieldData.text.trim().startsWith("{")) {
                                textFieldData.text = "{" + textFieldData.text;
                              }

                              if (!textFieldData.text.trim().endsWith("}")) {
                                textFieldData.text = textFieldData.text + "}";
                              }

                              print('${textFieldData.text}');

                              Map<String, dynamic> data =
                                  jsonDecode(textFieldData.text);

                              MyFirebase.addDocument(path: path, data: data);
                            },
                            label: const Text('Add'),
                            icon: const Icon(Icons.add),
                          ),
                          SizedBox(
                            width: 10,
                          ),
                          ElevatedButton.icon(
                            onPressed: () async {
                              textFieldData.text = "{\n"
                                  "   \"name\" : \"Hazhan\", \n"
                                  "   \"age\" : 27, \n"
                                  "   \"height\" : 1.80 \n"
                                  "}\n";
                            },
                            label: const Text('Generate temp'),
                            icon: const Icon(Icons.data_array),
                          ),
                        ],
                      ),
                    ]),
                  ),
                ],
              ),
            ),
          ),
        ),
      );
    },
  );
}

showUpdateDialog(BuildContext context,
    {required String path, required String docId, Map<String, dynamic>? data}) {
  showDialog(
    context: context,
    barrierDismissible: true,
    builder: (context) {
      String formatted = '';

      if (data != null) {
        formatted = jsonEncode(data);
        formatted = formatted.beautifyJson();
      }

      TextEditingController textFieldData =
          TextEditingController(text: formatted);

      return Material(
        color: Colors.transparent,
        child: Center(
          child: Container(
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(20),
              color: Colors.white,
            ),
            // Dialog background
            width: MediaQuery.of(context).size.width * 0.90,
            // Dialog width
            // Dialog height
            child: SingleChildScrollView(
              child: Column(
                children: [
                  Container(
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.only(
                        topLeft: Radius.circular(10),
                        topRight: Radius.circular(10),
                      ),
                      color: Colors.blue,
                    ),
                    child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Row(
                        children: [
                          Text(
                            'Update/Set Document',
                            style: TextStyle(
                              color: Colors.white,
                            ),
                          ),
                          Spacer(),
                          IconButton(
                            icon: Icon(
                              Icons.close,
                              color: Colors.white,
                            ),
                            onPressed: () {
                              Get.back();
                            },
                          ),
                        ],
                      ),
                    ),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: Column(
                        mainAxisAlignment: MainAxisAlignment.start,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Center(
                              child:
                                  Text('Make sure you init data as Map/Json')),
                          SizedBox(
                            height: 5,
                          ),
                          TextFormField(
                            controller: textFieldData,
                            decoration: InputDecoration(
                              border: OutlineInputBorder(),
                            ),
                            keyboardType: TextInputType.multiline,
                            minLines: 8,
                            maxLines: 8,
                          ),
                          SizedBox(
                            height: 10,
                          ),
                          Row(
                            children: [
                              ElevatedButton.icon(
                                onPressed: () async {
                                  if (!textFieldData.text
                                      .trim()
                                      .startsWith("{")) {
                                    textFieldData.text =
                                        "{" + textFieldData.text;
                                  }

                                  if (!textFieldData.text
                                      .trim()
                                      .endsWith("}")) {
                                    textFieldData.text =
                                        textFieldData.text + "}";
                                  }

                                  Map<String, dynamic> data =
                                      jsonDecode(textFieldData.text);

                                  MyFirebase.updateOrSetDoc(
                                      path: path,
                                      docId: docId,
                                      data: data,
                                      isUpdate: true);

                                  Get.back();
                                },
                                label: const Text('Update'),
                                icon: const Icon(Icons.refresh),
                              ),
                              SizedBox(
                                width: 10,
                              ),
                              ElevatedButton.icon(
                                onPressed: () async {
                                  if (!textFieldData.text
                                      .trim()
                                      .startsWith("{")) {
                                    textFieldData.text =
                                        "{" + textFieldData.text;
                                  }

                                  if (!textFieldData.text
                                      .trim()
                                      .endsWith("}")) {
                                    textFieldData.text =
                                        textFieldData.text + "}";
                                  }

                                  Map<String, dynamic> data =
                                      jsonDecode(textFieldData.text);

                                  await MyFirebase.updateOrSetDoc(
                                      path: path,
                                      docId: docId,
                                      data: data,
                                      isUpdate: false);

                                  Get.back();
                                },
                                label: const Text('Replace'),
                                icon: const Icon(Icons.settings_backup_restore),
                              ),
                            ],
                          ),
                          SizedBox(
                            height: 10,
                          ),
                          MainScreen.showValue(
                            'Update : Set ONLY above fields to new values. other fields are left untouched.',
                            leading: Icon(
                              Icons.refresh,
                            ),
                          ),
                          SizedBox(
                            height: 3,
                          ),
                          Wrap(
                            crossAxisAlignment: WrapCrossAlignment.start,
                            children: [
                              MainScreen.showValue(
                                'Replace : Set document data to above fields. any field that exists and not mentioned above will be deleted.',
                                leading: Icon(
                                  Icons.settings_backup_restore,
                                ),
                              ),
                            ],
                          ),
                        ]),
                  ),
                ],
              ),
            ),
          ),
        ),
      );
    },
  );
}
